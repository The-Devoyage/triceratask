[service]
name = "todos"
port = 5555

[service.cors]
allow_methods = [{method = "POST"}]
allow_headers = ["Authorization", "Content-Type"]

[[service.data_sources]]
[service.data_sources.SQL]
name = "triceratask_ds"
uri = "$TRICERATASK_SQL_URI"
dialect = "SQLITE"
#paths must be relative to running directory
sqlite_extensions = ["$TRICERATASK_SQLITE_EXTENSIONS"]
migrations_path = "$TRICERATASK_MIGRATIONS_PATH"

[service.auth]
requesting_party = "$TRICERATASK_RP" #"localhost"
requesting_party_name = "$TRICERATASK_RPN" #"triceratask.com"
requesting_party_origin = "$TRICERATASK_RPO" #"http://localhost:5173" #Origin of the client. http://localhost:5173
identifier = "username"
data_source = "triceratask_ds"
private_key = "66a_Tpy8wxEB8W8VXFDTBOGcl2NORaCD1qF0dFPWjbk"

# Todos 
[[service.entities]]
name = "todo"
fields = [
  { name = "id", scalar = "Int", required = true, exclude_from_input = ["All"]  },
  { name = "uuid", scalar = "String", required = true, exclude_from_input = ["CreateOne", "UpdateOne", "UpdateMany"] },
  { name = "title", scalar = "String", required = true },
  { name = "description", scalar = "String", required = true },
  { name = "completed", scalar = "Boolean", required = true },
  { name = "created_at", scalar = "String", required = true, exclude_from_input = ["All"] },
  { name = "updated_at", scalar = "String", required = true, exclude_from_input = ["All"] },
  { name = "completed_at", scalar = "String", exclude_from_input = ["All"] },
  { name = "created_by", scalar = "String", required = true, exclude_from_input = ["UpdateOne", "UpdateMany"] },
  { name = "updated_by", scalar = "String", required = true },
  { name = "completed_by", scalar = "String", exclude_from_input = ["All"] },
  { name = "history", scalar = "String", as_type = "todo_history", list = true, exclude_from_input = ["All"] },
  { name = "goal_date", scalar = "String" }
]

[service.entities.data_source]
from = "triceratask_ds"
[service.entities.data_source.resolvers]
[service.entities.data_source.resolvers.find_one]
[[service.entities.data_source.resolvers.find_one.guards]]
name = "Permissions Error"
if_expr = "headers(\"user_uuid\") != input(\"created_by\")"
then_msg = "Permission Denied - You can only manage your own todos."

[service.entities.data_source.resolvers.find_many]
[[service.entities.data_source.resolvers.find_many.guards]]
name = "Permissions Error"
if_expr = "headers(\"user_uuid\") != input(\"created_by\")"
then_msg = "Permission Denied - You can only manage your own todos."

[service.entities.data_source.resolvers.create_one]
[[service.entities.data_source.resolvers.create_one.guards]]
name = "Permissions Error"
if_expr = "headers(\"user_uuid\") != input(\"created_by\")"
then_msg = "Permission Denied - You can only manage your own todos."

[service.entities.data_source.resolvers.update_one]
[[service.entities.data_source.resolvers.update_one.guards]]
name = "Permissions Error"
if_expr = "headers(\"user_uuid\") != input(\"query.created_by\")"
then_msg = "Permission Denied - You can only manage your own todos."

[service.entities.data_source.resolvers.update_many]
[[service.entities.data_source.resolvers.update_many.guards]]
name = "Permissions Error"
if_expr = "headers(\"user_uuid\") != input(\"query.created_by\")"
then_msg = "Permission Denied - You can only manage your own todos."

# History
[[service.entities]]
name = "todo_history"
fields = [
  { name = "id", scalar = "Int", required = true, exclude_from_input = ["All"]  },
  { name = "uuid", scalar = "String", required = true, exclude_from_input = ["CreateOne", "UpdateOne", "UpdateMany"] },
  { name = "todo_uuid", scalar = "String", required = true, exclude_from_input = ["CreateOne", "UpdateOne", "UpdateMany"] },
  { name = "created_by", scalar = "String", required = true, exclude_from_input = ["UpdateOne", "UpdateMany"] },
  { name = "created_at", scalar = "String", required = true, exclude_from_input = ["All"] },
  { name = "property", scalar = "String", required = true },
  { name = "old_value", scalar = "String", required = false },
  { name = "new_value", scalar = "String", required = false },
]

# User
[[service.entities]]
name = "user"
fields = [
  { name = "id", scalar = "Int", required = true, exclude_from_input = ["All"] },
  { name = "uuid", scalar = "String", required = true, exclude_from_input = ["CreateOne", "UpdateOne", "UpdateMany"] },
  { name = "identifier", scalar = "String", required = true },
  { name = "created_at", scalar = "String", required = true, exclude_from_input = ["All"] },
  { name = "updated_at", scalar = "String", required = true, exclude_from_input = ["All"] },
  { name = "registration_state", scalar = "String", required = false, exclude_from_input = ["All"] },
  { name = "passkey", scalar = "String", required = false, exclude_from_input = ["All"] },
  { name = "authentication_state", scalar = "String", required = false, exclude_from_input = ["All"] },
]

# User Connections
[[service.entities]]
name = "user_connection"
fields = [
  { name = "id", scalar = "Int", required = true, exclude_from_input = ["All"]  },
  { name = "uuid", scalar = "String", required = true, exclude_from_input = ["CreateOne", "UpdateOne", "UpdateMany"] },
  { name = "user_uuid", scalar = "String", required = true, exclude_from_input = ["CreateOne", "UpdateOne", "UpdateMany"] },
  { name = "connected_user_uuid", scalar = "String", required = true, exclude_from_input = ["CreateOne", "UpdateOne", "UpdateMany"] },
  { name = "created_by", scalar = "String", required = true, exclude_from_input = ["UpdateOne", "UpdateMany"] },
  { name = "updated_by", scalar = "String", required = true }, 
  { name = "created_at", scalar = "String", required = true, exclude_from_input = ["All"] },
  { name = "updated_at", scalar = "String", required = true, exclude_from_input = ["All"] },
]
