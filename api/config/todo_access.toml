[[entities]]
name = "todo_access"
required = true
fields = [
  { name = "id", scalar = "Int", required = true, exclude_from_input = ["All"] },
  { name = "uuid", scalar = "UUID", required = true, exclude_from_input = ["CreateOne", "UpdateOne", "UpdateMany"] },
  { name = "todo", scalar = "Int", required = true, as_type = "todo", join_on = "id", exclude_from_input = ["CreateOne", "UpdateOne", "UpdateMany"], default_value = "context(\"todo.id\")" },
  { name = "todo_uuid", scalar = "UUID", is_virtual = true, exclude_from_output = true },
  { name = "user", scalar = "Int", required = true, as_type = "user", join_on = "id", eager = true, exclude_from_input = ["CreateOne", "UpdateOne", "UpdateMany"], default_value = "context(\"access_user.id\")" },
  { name = "user_uuid", scalar = "UUID", is_virtual = true, exclude_from_output = true },
  { name = "edit", scalar = "Boolean", required = true },
  { name = "manage", scalar = "Boolean", required = true },
  { name = "revoked", scalar = "Boolean", required = true },
  { name = "created_by", scalar = "Int", required = true, as_type = "user", join_on = "id", exclude_from_input = ["All"], default_value = "context(\"user.id\")" },
  { name = "updated_by", scalar = "Int", required = true, as_type = "user", join_on = "id", exclude_from_input = ["All"], default_value = "context(\"user.id\")" },
  { name = "created_at", scalar = "DateTime", required = true, exclude_from_input = ["All"] },
  { name = "updated_at", scalar = "DateTime", required = true, exclude_from_input = ["All"] },
]

[entities.data_source]
from = "triceratask_ds"

[[entities.data_source.resolvers.create_one.guards]]
name = "not_found"
if_expr = '''
  todo_id = context("todo.id");
  len(todo_id) == 0
'''
then_msg = "Todo does not exist"
[[entities.data_source.resolvers.create_one.guards.context]]
entity_name = "todo"
query = '''
  {
    "get_todos_input": {
      "query": {
        "AND": {{uuid}}
      }
    }
  }
'''
variables = [
  ["{{uuid}}", "input(\"values\", \"todo_uuid\")"]
]

[[entities.data_source.resolvers.create_one.guards]]
name = "user_not_found"
if_expr = '''
  user_id = context("access_user.id");
  len(user_id) == 0
'''
then_msg = "User does not exist"
[[entities.data_source.resolvers.create_one.guards.context]]
entity_name = "user"
name = "access_user"
query = '''
  {
    "get_users_input": {
      "query": {
        "AND": {{uuid}}
      }
    }
  }
'''
variables = [
  ["{{uuid}}", "input(\"values\", \"user_uuid\")"]
]

[[entities.data_source.resolvers.create_one.guards]]
name = "already_exists"
if_expr = '''
  todo_uuid = context("user_access.todo_uuid");
  user_uuid = context("user_access.user_uuid");
  len(todo_uuid) > 0 
'''
then_msg = "Team member already invited."
[[entities.data_source.resolvers.create_one.guards.context]]
entity_name = "todo_access"
name = "user_access"
query = '''
  {
    "get_todo_accesss_input": {
      "query": {
        "AND": [
          { "AND": {{todo}} },
          { "user": {
              "AND": {{id}}
            } 
          }
        ]
      }
    }
  }
'''
variables = [
  ["{{todo}}", "context(\"todo.id\")"], 
  ["{{id}}", "context(\"access_user.id\")"],
]

[[entities.data_source.resolvers.update_many.guards]]
name = "self_edit_blocked"
if_expr = '''
  access_user_uuid = context("todo_access.user_uuid");
  token_user_uuid = token_data("user_uuid");
  contains(access_user_uuid, token_user_uuid)
'''
then_msg = "You cannot manage your own access"
[[entities.data_source.resolvers.update_many.guards.context]]
entity_name = "todo_access"
query = '''
  {
    "get_todo_accesss_input": {
      "query": {
        "AND": {{uuid}}
      }
    }
  }
'''
variables = [
  ["{{uuid}}", "input(\"query\", \"uuid\")"], 
]

[[entities.data_source.resolvers.update_many.guards]]
name = "edit_blocked"
if_expr = '''
  user_edit = context("user_access.edit");
  contains(user_edit, false) || len(user_edit) == 0
'''
then_msg = "You do not have edit access"
[[entities.data_source.resolvers.update_many.guards.context]]
entity_name = "todo_access"
name = "user_access"
query = '''
  {
    "get_todo_accesss_input": {
      "query": {
        "AND": [
          { "AND": {{todo}} },
          { "user": {
              "AND": {{id}}
            } 
          }
        ]
      }
    }
  }
'''
variables = [
  ["{{todo}}", "context(\"todo_access.todo\")"], 
  ["{{id}}", "context(\"user.id\")"],
]

[[entities.data_source.resolvers.update_many.guards]]
name = "no_edit_owner"
if_expr = '''
  todo_owner = context("todo.created_by");
  owner_id = context("todo_access.user");
  contains_any(todo_owner, owner_id)
'''
then_msg = "You may not edit the owner's access"
[[entities.data_source.resolvers.update_many.guards.context]]
entity_name = "todo_access"
query = '''
  {
    "get_todo_accesss_input": {
      "query": {
        "AND": {{uuid}}
      }
    }
  }
'''
variables = [
  ["{{uuid}}", "input(\"query\", \"uuid\")"], 
]

[[entities.data_source.resolvers.update_many.guards.context]]
entity_name = "todo"
query = '''
  {
    "get_todos_input": {
      "query": {
        "AND": {{id}}
      }
    }
  }
'''
variables = [
  ["{{id}}", "context(\"todo_access.todo\")"], 
]
